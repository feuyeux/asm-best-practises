package org.feuyeux.rsocket.api;

import lombok.extern.slf4j.Slf4j;
import org.feuyeux.rsocket.pojo.HelloRequest;
import org.feuyeux.rsocket.pojo.HelloResponse;
import org.feuyeux.rsocket.service.HelloService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.stereotype.Controller;
import reactor.core.publisher.Mono;

@Slf4j
@Controller
public class RSocketController {
    private static String RSOCKET_HELLO_BACKEND = System.getenv("RSOCKET_HELLO_BACKEND");

    @Autowired
    private HelloService helloService;

    @MessageMapping("hello")
    Mono<HelloResponse> requestAndResponse(HelloRequest helloRequest) {
        log.info(" >> [Request-Response] data:{}", helloRequest);
        String msg = helloRequest.getValue();
        if (RSOCKET_HELLO_BACKEND == null) {
            String result = "Hola " + msg + helloService.markIp();
            return Mono.just(new HelloResponse(result));
        } else {
            return helloService.sayHello(helloRequest).map(r -> {
                String result = "Hola " + msg;
                String backServiceResult = r.getValue();
                String message = result + backServiceResult;
                r.setValue(message);
                return r;
            });
        }
    }
}