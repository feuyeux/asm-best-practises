package org.feuyeux.http.api;

import okhttp3.Headers;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import java.io.IOException;

@RestController
public class HttpController {
    private static final Logger LOGGER = LoggerFactory.getLogger(HttpController.class);
    private OkHttpClient client = new OkHttpClient();

    private static String HTTP_HELLO_HOST;

    static {
        HTTP_HELLO_HOST = System.getenv("HTTP_HELLO_HOST");
        if (HTTP_HELLO_HOST == null || HTTP_HELLO_HOST.isEmpty()) {
            HTTP_HELLO_HOST = "http-hello-svc";
        }
    }

    @GetMapping(path = "/hello/{msg}")
    public String sayHello(@PathVariable String msg) throws IOException {
        String url = "http://" + HTTP_HELLO_HOST + ":8001/hello/" + msg;
        Request request = new Request.Builder()
                .url(url)
                .build();
        try (Response response = client.newCall(request).execute()) {
            if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);
            Headers responseHeaders = response.headers();
            for (int i = 0; i < responseHeaders.size(); i++) {
                LOGGER.debug(responseHeaders.name(i) + ": " + responseHeaders.value(i));
            }
            String result = response.body().string();
            LOGGER.info("{} {}", HTTP_HELLO_HOST, result);
            return result;
        }
    }

    @GetMapping(path = "/bye")
    public String sayBye() throws IOException {
        LOGGER.info(".");
        String url = "http://" + HTTP_HELLO_HOST + ":8001/bye";
        Request request = new Request.Builder()
                .url(url)
                .build();
        try (Response response = client.newCall(request).execute()) {
            if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);
            Headers responseHeaders = response.headers();
            for (int i = 0; i < responseHeaders.size(); i++) {
                LOGGER.debug(responseHeaders.name(i) + ": " + responseHeaders.value(i));
            }
            String result = response.body().string();
            LOGGER.info("{} {}", HTTP_HELLO_HOST, result);
            return result;
        }
    }
}